// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}


$popup_width: 180px;

/* VERTICAL menus where submenus pop RIGHT (default). */
@mixin rsc-taxonomy-menu-right() {
  ul.rsc-taxonomy-menu {
    width: 100%;
    > li {
      float: right;
    }
    li {
      width: 100%;
    }
    ul {
      width: $popup_width;
      left: 100%;
      top: -1px;
    }
    ul ul {
      width: $popup_width;
      left: $popup_width;
      top: -1px;
    }
    li.menuparent,
    li li.menuparent {
      background-image: url("../images/arrow-right.png");
      background-position: right center;
      background-repeat: no-repeat;
    }
    a,
    ul a {
      margin-right: 14px; // fixed width because of arrow image
    }
  }
}

/* VERTICAL menus where submenus pop LEFT. */
@mixin rsc-taxonomy-menu-left() {
  ul.rsc-taxonomy-menu {
    width: 100%;
    > li {
      float: left;
    }
    li {
      width: 100%;
    }
    li ul {
      width: $popup_width;
      left: - ($popup_width);
      top: -1px;
    }
    li ul li ul {
      width: $popup_width;
      left: - ($popup_width);
      top: -1px;
    }
    li.menuparent,
    li li.menuparent {
      background-image: url("../images/arrow-left.png");
      background-position: left center;
      background-repeat: no-repeat;
    }
    a,
    ul a {
      padding-left: 14px; // fixed width because of arrow image
    }
  }
}

@mixin block-wrapper() {
  margin-bottom: rhythm(0.5);
  padding-bottom: rhythm(0.5);
  padding-left: $indent-amount-small;
  border-width: 0 0 1px 1px;
  border-style: solid;
  border-color: $bluegrey2;
}


/**
 *   Category browser view
 */
@mixin cat-browse($cols: 2) {
  
  ul {
    margin: 0;
    padding: 0;
  }
  div.item-list {
    overflow:hidden;
  }
  
  > .item-list > ul {
    > li {
      list-style-type: none;
      margin: rhythm(1) 0 0 0;
    }
    > li.first {
      margin: 0; // margin is not collapsing because of float containment on div.item-list
    }
  }
  
  > .item-list > ul > li > a {
    display: block;
    @include adjust-font-size-to( $h2-font-size );
    text-align: center;
    background-color: $bluegrey2;
    border: 1px solid $bluegrey4;
    clear: left; // TODO: is this unneccessary, due to overflow:hidden on .item-list ?
  }
  
  > .item-list > ul > li > .item-list > ul > li {
    list-style-type: none;
    @include float-columns($cols);
  }
  
  > .item-list > ul > li > .item-list > ul > li > a {
    font-weight: bold;
  }
  
  > .item-list > ul > li > .item-list > ul > li > .item-list > ul {
    padding-left: $indent-amount;
  }
  
  > .item-list > ul > li > .item-list > ul > li > .item-list > ul > li {
    list-style-type: none;
    display: inline-block;
    vertical-align: top;
    margin-right: $indent-amount-small;
  }
  
  > .item-list > ul > li > .item-list > ul > li > .item-list > ul > li  .item-list > ul > li {
    list-style-type: none;
    margin-left: $indent-amount-small/2;
    padding-left: $indent-amount-small/2;
    border-left: 1px solid $bluegrey4;
  }
}


/**
 *   To create columns using float:left;
 */
@mixin float-columns($cols: 2) {
  margin: 0 2% 0 0;
  float: left;
  width: ((100% / $cols) - 2%);
}


/**
 *   For quotes
 */
@mixin quote-text {
  font-family: $copperplate;
  font-style: italic;
  padding: 0;
  margin: 0;
  text-align: center;
  @include adjust-font-size-to( $h3-font-size );
}

@mixin quote-author {
  padding: 0;
  margin: 0;
  text-align: right;
  font-family: $base-font-family;
  font-style: italic;
  font-weight: bold;
  white-space: nowrap;
}


@mixin hanging-indent {
  text-indent: -$indent-amount-small;
  margin-left: $indent-amount-small;
  display: block;
}


@mixin decreasing-padding($smallest: 5%) {
  @media all and (max-width: ($t8 - 1)) {
    padding-left: $smallest;
    padding-right: $smallest;
  }
  @media all and (min-width: $t8) and (max-width: ($t4 - 1px)) {
    padding-left: $smallest * 2;
    padding-right: $smallest * 2;
  }
  @media all and (min-width: $t4) {
    padding-left: $smallest * 3;
    padding-right: $smallest * 3;
  }
}
@mixin decreasing-padding-left($smallest: 5%) {
  @media all and (max-width: ($t8 - 1)) {
    padding-left: $smallest;
  }
  @media all and (min-width: $t8) and (max-width: ($t4 - 1px)) {
    padding-left: $smallest * 2;
  }
  @media all and (min-width: $t4) {
    padding-left: $smallest * 3;
  }
}
@mixin decreasing-padding-right($smallest: 5%) {
  @media all and (max-width: ($t8 - 1)) {
    padding-right: $smallest;
  }
  @media all and (min-width: $t8) and (max-width: ($t4 - 1px)) {
    padding-right: $smallest * 2;
  }
  @media all and (min-width: $t4) {
    padding-right: $smallest * 3;
  }
}

/*
 * Apply this to the element surrounding the <a> or <button> tag(s).
 */
@mixin library_button {

  background-color: $orange6;
  border-radius: 5px;
  padding: rhythm(0.25, $h3-font-size) $indent-amount-small;
  margin: rhythm(0.25, $h3-font-size) 0 rhythm(0.25, $h3-font-size) $indent-amount-small;
  a:link,
  a:visited {
    color: white;
  }
  @include adjust-font-size-to( $h3-font-size );

  // make it work for <button>s too:
  border: none;
  color: white;

}
