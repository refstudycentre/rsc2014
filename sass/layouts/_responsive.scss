/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

// We are going to create a fluid grid with 1, 3, or 5 columns and 20px gutters
// between columns

/* Variables moved to _init.scss */

// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;

// Suppress this section of CSS for RTL layouts since it contains no LTR-specific styles.
@if $zen-reverse-all-floats == false {

/**
 * Center the page.
 *
 * Prevent excessively long lines of text by setting a max-width.
 */
#page,
.region-bottom {
  margin-left: auto;
  margin-right: auto;
  max-width: $t0;
}

/* Apply the shared properties of grid items in a single, efficient ruleset. */
#header,
#page-title-area,
#content,
#content_mid_left,
#content_mid_right,
#content_lower,
.region-sidebar-first,
.region-sidebar-second,
#footer {
  // See the note about $zen-auto-include-item-base above.
  @include zen-grid-item-base();
}

/* Containers for grid items and flow items. */
#header,
#midcol,
#footer {
  @include zen-grid-container();
}

} // End of @if $zen-reverse-all-floats == true

@media all and (max-width: ($t10 - 1)) {
  // centre the sidebars
  .sidebars {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
  }
  
  .region-sidebar-first {
    // for mobile-first, when left sidebar is at bottom of site, hide the nice menus, because they are not so nice there...
    div.block-rsc-taxonomy {
      display: none;
    }
  }
}

/**
 * Use 3 grid columns for smaller screens.
 */
@media all and (min-width: $t10) and (max-width: ($t4 - 1px)) {

  $zen-column-count: 3;

  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first {
    /* Span 2 columns, starting in 2nd column from left. */
    #midcol {
      @include zen-grid-item(2, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    /* Span 2 columns, starting in 1st column from left. */
    #midcol {
      @include zen-grid-item(2, 1);
    }

    /* Span 1 column, starting in 3rd column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 3);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    /* Span 2 columns, starting in 1st column from left. */
    #midcol {
      @include zen-grid-item(2, 1);
    }
    
    /* Have both sidebars on the right, one under the other */
    aside.sidebars {
      @include zen-grid-item(1, 3);
      
      // let the rsc-taxonomy-menu pop left
      section.region-sidebar-first {
        @include rsc-taxonomy-menu-left();
      }
    }

  }
  
}

/**
 * Use 5 grid columns for larger screens.
 */
@media all and (min-width: $t4) {

  $zen-column-count: 5;

  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first {
    /* Span 4 columns, starting in 2nd column from left. */
    #midcol {
      @include zen-grid-item(4, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    /* Span 4 columns, starting in 1st column from left. */
    #midcol {
      @include zen-grid-item(4, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 5);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    /* Span 3 columns, starting in 2nd column from left. */
    #midcol {
      @include zen-grid-item(3, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 5);
    }
  }
  
  // put middle content regions in two columns
  #content_mid_left {
    // divide this div's container in twe, and span one of those columns
    $zen-column-count: 2;
    @include zen-grid-item(1, 1);
    @include zen-clear(); // starting on a new row
  }
  #content_mid_right {
    // divide this div's container in two, and span one of those columns
    $zen-column-count: 2;
    @include zen-grid-item(1, 2);
  }
  
  // the lower content also starts on a new line
  #content_lower {
    @include zen-clear();
  }
}

